AWSTemplateFormatVersion: "2010-09-09"
Description: lms vpc
Resources:
  lmsVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: lms-vpc
  lmsfrontendSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: lmsVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-2a"
      Tags:
        - Key: Name
          Value: frontend-subnet
  lmsbackendSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: lmsVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-2b"
      Tags:
        - Key: Name
          Value: backend-subnet
  lmsdatabaseSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: lmsVPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: "us-east-2c"
      Tags:
        - Key: Name
          Value: database-subnet  
  lmsInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: lms-internet gateway
  lmsAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: lmsVPC
      InternetGatewayId:
        Ref: lmsInternetGateway
  lmsfrontendRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: lmsVPC
      Tags:
        - Key: Name
          Value: Frontend-routetable
  frontendSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: lmsfrontendSubnet
      RouteTableId:
        Ref: lmsfrontendRouteTable
  lmsfrontendRoute:
    Type: AWS::EC2::Route
    DependsOn: lmsAttachGateway
    Properties:
      RouteTableId:
        Ref: lmsfrontendRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: lmsInternetGateway  
  lmsbackendRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: lmsVPC
      Tags:
        - Key: Name
          Value: backend-routetable
  backendSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: lmsbackendSubnet
      RouteTableId:
        Ref: lmsbackendRouteTable
  lmsbackendRoute:
    Type: AWS::EC2::Route
    DependsOn: lmsAttachGateway
    Properties:
      RouteTableId:
        Ref: lmsbackendRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: lmsInternetGateway 
  lmsdatabaseRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:  
        Ref: lmsVPC
      Tags:
      - Key: Name
        Value: database-routetable
  databaseSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: lmsdatabaseSubnet
      RouteTableId:
        Ref: lmsdatabaseRouteTable
  lmsfrontbackendNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: lmsVPC
      Tags:
        - Key: Name
          Value: frontend-backend-nacl
  frontendSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: lmsfrontendSubnet
      NetworkAclId:
        Ref: lmsfrontbackendNetworkAcl
  backendSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: lmsbackendSubnet
      NetworkAclId:
        Ref: lmsfrontbackendNetworkAcl
  lmsfrontbackendInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: lmsfrontbackendNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  lmsfrontbackendOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: lmsfrontbackendNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  lmsdatabaseNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId:
        Ref: lmsVPC
      Tags:
        - Key: Name
          Value: database-nacl
  databaseSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId:
        Ref: lmsdatabaseSubnet
      NetworkAclId:
        Ref: lmsdatabaseNetworkAcl
  lmsdatabseInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: lmsdatabaseNetworkAcl
      RuleNumber: 100
      Protocol: -1
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
      PortRange:
        From: 0
        To: 65535
  lmsdatabaseOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId:
        Ref: lmsdatabaseNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0
  frontendInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http port 80 to client host
      VpcId: !Ref lmsVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
  backendInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow nodejs port 8080 to client host
      VpcId: !Ref lmsVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0 
  databaseInstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow postgres port 5432 to client host
      VpcId: !Ref lmsVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0   